---
title: "Metropolis Hasting"
author: "Oliver DÃ¼rr"
format:
  html:
    toc: true
    toc-title: "Table of Contents"
    fig-width: 8
    fig-height: 4
    code-fold: true
    code-tools: true 
    mathjax: true
filters:
  - webr
---

##  Metropolis Algorithm (King of the Archipelago)
```{webr-r}
num_weeks <- 1e5
positions <- rep(0, num_weeks)
current <- 10
for (i in 1:num_weeks) {
  ## record current position
  positions[i] <- current
  ## flip coin to generate proposal
  proposal <- current + sample(c(-1, 1), size = 1)
  ## now make sure he loops around the archipelago
  if (proposal < 1) proposal <- 10
  if (proposal > 10) proposal <- 1
  ## move?
  prob_move <- proposal / current
  current <- ifelse(runif(1) < prob_move, proposal, current)
}
plot(1:100, positions[1:100])
plot(table(positions)/num_weeks, type = "h", xlab = "Island", ylab = "Probability")
```

##  Metropolis Algorithm (continuous case)

```{webr-r}
Steps = 10000
plot_max = 500
thetas = rep(NA, Steps)

# Some target distribution (only up to a constant factor)
p = function(theta){
  return (dexp(theta, rate=1/10)*42)
}

theta = 60 #Initial value
for (t in 1:Steps) {
  theta_star = rnorm(1, theta, 15)  # Propose a new value
  A = min(1, p(theta_star)/p(theta)) #Acceptance probability
  # Accept or reject the new value
  if (runif(1) < A) { # Accept with probability A
    thetas[t] = theta_star
    theta = theta_star 
  } 
  thetas[t] = theta
}
plot(1:plot_max, thetas[1:plot_max], type = "l", xlab = "Steps", ylab = "Theta", main="Trace of the samples")
hist(thetas[200:Steps], main = "Density of the samples", freq=FALSE, 30)
```

